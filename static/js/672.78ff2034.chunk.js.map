{"version":3,"file":"static/js/672.78ff2034.chunk.js","mappings":"sMACA,G,QAAA,CAAgB,QAAU,yBAAyB,YAAc,6BAA6B,KAAO,sBAAsB,SAAW,0BAA0B,QAAU,yBAAyB,KAAO,wB,mBCWxM,EATiB,SAACA,GAChB,OACA,iBAAKC,UAAWC,EAAAA,KAAhB,WACC,gBAAKC,IAAOH,EAAMI,SACnB,SAAC,KAAD,CAASC,GAAE,mBAAcL,EAAMM,IAA/B,SAAsCN,EAAMO,WCI9C,EATc,SAACP,GACb,OACA,iBAAKC,UAAWC,EAAAA,QAAhB,UACGF,EAAMQ,SACP,gBAAKL,IAAKH,EAAMS,Y,uCCEhBC,GAAcC,EAAAA,EAAAA,GAAU,IAWxBC,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,WAAjBD,EATL,SAACb,GACjB,OAAO,iBAAMe,SAAUf,EAAMgB,aAAtB,UACJ,iBAAKf,UAAWC,EAAAA,KAAhB,WACI,SAACe,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EAAUZ,KAAM,KAAMa,SAAU,CAACC,EAAAA,EAAUX,MAC7D,oDAqCX,EA9BgB,SAACV,GAEd,IAAIsB,EAAkBtB,EAAMuB,QAAQC,KAAM,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYlB,KAAMkB,EAAOlB,KAAMD,GAAImB,EAAOnB,GAAIF,MAAOqB,EAAOrB,WAE5GsB,EAAmB1B,EAAM2B,SAASH,KAAK,SAAAI,GAAK,OAAI,SAAC,EAAD,CAASpB,QAASoB,EAAMpB,QAASC,MAAOmB,EAAMnB,WAQjG,OACA,iBAAKR,UAAWC,EAAAA,QAAhB,WAEI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKoB,KAGL,gBAAKrB,UAAWC,EAAAA,SAAhB,SACIwB,KAEJ,SAACd,EAAD,CAAkBG,SAdR,SAACc,GACb7B,EAAM8B,WAAWD,EAASE,WCPhC,GAAeC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAfD,SAACC,GACrB,MAAO,CACPX,QAASW,EAAMC,OAAOZ,QACtBI,SAAUO,EAAMC,OAAOR,aAIA,SAACS,GACxB,MAAO,CACLN,WAAY,SAACD,GACXO,GAASC,EAAAA,EAAAA,IAAMR,SAKgDS,EAAAA,EAArE,CAAmFC","sources":["webpack://cyberrtoad/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__NFHVV\",\"dialogItems\":\"Dialogs_dialogItems__L3tiR\",\"item\":\"Dialogs_item__uaBl0\",\"messages\":\"Dialogs_messages__JTsag\",\"message\":\"Dialogs_message__9Pno7\",\"text\":\"Dialogs_text__+4hwq\"};","import { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n    <div className={s.item}>\r\n     <img src = {props.image}/>\r\n    <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n   </div> \r\n    )\r\n  }\r\n\r\n  export default DialogItem;","import s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className={s.message}>\r\n      {props.message}\r\n      <img src={props.color}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Message;","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/forms/form1';\r\nimport { maxLength, required } from '../../utils/validators/validators';\r\n\r\nconst maxLength40 = maxLength(40)\r\n\r\nconst MessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n       <div className={s.text}>\r\n           <Field component={Textarea} name={'dm'} validate={[required, maxLength40]}/>\r\n           <button>Add Message</button>\r\n           </div>\r\n    </form>\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({form: 'message'})(MessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n   \r\n   let dialogsElements = props.dialogs.map ( dialog => <DialogItem name={dialog.name} id={dialog.id} image={dialog.image}/> ) \r\n\r\n   let messagesElements = props.messages.map( pismo => <Message message={pismo.message} color={pismo.color} /> )\r\n\r\n   \r\n\r\n  let onSubmitF = (formData) => {\r\n      props.addMessage(formData.dm)\r\n   }\r\n\r\n    return (\r\n    <div className={s.dialogs}>\r\n\r\n        <div className={s.dialogsItems}>\r\n            {dialogsElements}    \r\n        </div>\r\n\r\n        <div className={s.messages}>\r\n           {messagesElements}\r\n        </div>\r\n        <MessageReduxForm onSubmit={onSubmitF}/>\r\n    \r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport AuthRedirect from '../../hoc/AuthRedirect';\r\nimport { addDM, updateMessage } from '../../Redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\nlet MapStateToProps = (state) => {\r\n  return {\r\n  dialogs: state.dmPage.dialogs,\r\n  messages: state.dmPage.messages\r\n  }\r\n}\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (formData) => {\r\n      dispatch(addDM(formData))\r\n    },\r\n  }\r\n}\r\n\r\nexport default compose(connect(MapStateToProps, MapDispatchToProps), AuthRedirect)(Dialogs)"],"names":["props","className","s","src","image","to","id","name","message","color","maxLength40","maxLength","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","dialogsElements","dialogs","map","dialog","messagesElements","messages","pismo","formData","addMessage","dm","compose","connect","state","dmPage","dispatch","addDM","AuthRedirect","Dialogs"],"sourceRoot":""}